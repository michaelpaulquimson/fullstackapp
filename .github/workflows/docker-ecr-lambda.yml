name: Build and Push Docker Image to ECR (on version bump)

on:
  push:
    branches:
      - main
    paths:
      - 'backend/package.json'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Get current and previous version
        id: get_versions
        run: |
          VERSION=$(jq -r .version backend/package.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          PREV_VERSION=$(git show HEAD^:backend/package.json | jq -r .version || echo "")
          echo "PREV_VERSION=$PREV_VERSION" >> $GITHUB_ENV

      - name: Check if version changed
        run: |
          if [ "$VERSION" = "$PREV_VERSION" ]; then
            echo "Version did not change. Skipping build."
            exit 0
          fi

      - name: Build Docker image
        env:
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          docker build -t $ECR_REPOSITORY:$VERSION ./backend

      - name: Push Docker image to ECR
        env:
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          docker push $ECR_REPOSITORY:$VERSION

      - name: Output image URI
        env:
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          echo "Pushed image: $ECR_REPOSITORY:$VERSION"

      - name: Create and push git tag for version
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag v$VERSION
          git push origin v$VERSION
